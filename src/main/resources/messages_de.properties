# The program uses the java.text.MessageFormat class to format messages.
# For correct message formatting, see the documentation for this class.
# https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/text/MessageFormat.html
#
# Please note, that the apostrophe (') is special symbol and you should double it or use alternative symbol (â€™)
#
# The program supports variability of messages. Use symbol '\f' (form feed) to separate them.
#

welcome = Willkommen zum Tier-Experten System!

# Greetings
# Time specific greetings.

greeting.morning        = Guten Morgen!
greeting.afternoon      = Guten Tag!
greeting.evening        = Guten Abend!
greeting.night          = Hallo Nachteule!
greeting.early          = Hallo Frühaufsteher!


# Random farewell.

farewell=\
    Ciao!\f\
    Servus!\f\
    Tschüss!\f\
    Habe die Ehre!\f\
    Wir sehen uns!\f\
    Mach's gut!\f\
    Auf Wiedersehen!\f\
    Bis bald!\f\
    Bis zum nächsten Mal!\f\
    Wir sehen uns!

# Ask user again for a closed (Yes/No) question

ask.again=\
    Komm schon, ja oder nein?\f\
    Bitte gib ja oder nein ein.\f\
    Lustig, ich verstehe Dich nicht, war es ja oder nein?\f\
    Entschuldigung, du musst ja oder nein sagen.\f\
    Versuch nochmal: ja oder nein?\f\
    Ich glaube ich habe Dich nicht verstanden: ja oder nein?\f\
    Könntest du bitte einfach ja oder nein sagen?

# Ask for a favourite animal

animal.wantLearn    = Ich möchte etwas über Tiere lernen.
animal.askFavorite  = Welches Tier magst Du am liebsten?
animal.nice         = Schön!\fGroßartig!\fWunderbar!\fGenial!\fSuper!\fFantastisch!\fPrima!
animal.learnedMuch  = Ich hab so viel dazugelernt über Tiere!

# The properties used for method ask("<key>")

animal.prompt       = Gib ein Tier ein:
animal.error        =\
    Das Tier muss im folgenden Format eingegeben werden:\n\
    der/die/das oder ein/eine + Name des Tiers, z.B: "ein Elefant", "die Katze" oder "der Hund".

statement.prompt    =\
    Gib eine Aussage ein, die ein {0} von {1} unterscheidet.\n\
    Der Satz muss das folgende Format haben: 'Es kann/hat/ist ...' oder 'Kann/Hat/Ist es ...'.

statement.error     = Beispielaussagen:\n\
                       - Es kann fliegen \n\
                       - Es hat Hörner \n\
                       - Es ist ein Säugetier

# The Guessing Game

game.letsPlay       = Lass uns ein Spiel spielen!
game.think          = Du denkst Dir ein Tier aus und ich versuche es zu raten.
game.enter          = Drücke Enter, wenn Du soweit bist.
game.win            = Toll, dass ich es geraten habe!\f\
    Ich hätte nie gedacht, dass ich das raten kann!

game.giveUp         = Ich gebe auf. An welches Tier hattest Du denn gedacht?
game.isCorrect      = Stimmt die Aussage für {0}?
game.learned        = Ich habe die folgenden Dinge dazugelernt:
game.distinguish    = Ich kann diese Tier unterscheiden mit der Frage:

game.thanks=\
    Das war cool! \f\
    Es hat Spaß gemacht mit Dir zu spielen! \f\
    Schön, dass wir Zeit miteinander verbracht haben! \f\
    Danke Dir fürs Mitspielen! \f\
    Danke schön! Mir hat es großen Spaß gemacht!

game.again=\
    Möchtest Du nach eine Runde spielen?\f\
    Darf ich noch ein Tier raten?\f\
    Noch 'ne Runde?\f\
    Noch ein Spiel?\f\
    Nochmal?\f\
    Spielen wir noch einmal, bitte!

# Application Menu

# Menu properties
menu.property.title     = Was möchtest Du tun:
menu.property.exit      = Beenden
menu.property.error     = Bitte gib eine Ziffer von o bis {0} ein

# Menu items
menu.entry.play        = Tiere raten
menu.entry.list        = Liste der mir bekannten Tiere anzeigen
menu.entry.search      = Suche nach einem Tier
menu.entry.statistics  = Etwas Statistik
menu.entry.print       = Wissensbaum ausgeben

# Tree Services

# List of all animals
tree.list.animals   = Hier sind die Tiere, die ich kenne:

# Search an animal
tree.search.facts    = Fakten über {0}:
tree.search.noFacts  = Habe keine Fakten über {0}.


# The Knowledge Tree Statistics
tree.stats.title        =Die Statistik meines Wissensbaumes
tree.stats.root         =- Wurzel-Knoten                {0}
tree.stats.nodes        =- Gesamtanzahl Knoten          {0,number,integer}
tree.stats.animals      =- Anzahl Tier-Knoten           {0,number,integer}
tree.stats.statements   =- Anzahl Fakten-Knoten         {0,number,integer}
tree.stats.height       =- Höhe des Baumes              {0,number,integer}
tree.stats.minimum      =- Minimaler Tier-Level         {0,number,integer}
tree.stats.average      =- Durchschnittl. Tier-Level    {0,number,##0.0}
